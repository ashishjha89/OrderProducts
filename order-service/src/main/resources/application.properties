spring.application.name=order-service

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/order_products_db
spring.datasource.username=order_products_user
spring.datasource.password=283656ff3b8e513f
spring.jpa.hibernate.ddl-auto=update

inventory.api.base-url=http://inventory-service

server.port=0

springdoc.api-docs.path=/api/order/v3/api-docs
springdoc.swagger-ui.path=/api/order/swagger-ui.html

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

######## Resilinece4j Properties ###############
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true

# size of the buffer for storing circuit breaker events. These events can be consumed by event consumers,
# which are typically used for monitoring, logging, or metrics purposes.
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10

# The slidingWindowType property determines how the circuit breaker evaluates the state of the circuit
# based on recorded call results over a period of time or a number of calls (TIME_BASED or COUNT_BASED).
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=TIME_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10

# The percentage of failures that must occur before the circuit breaker opens. A typical value might be between 50-70%
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50

resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=30s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

# Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.example.orderservice.event.OrderPlacedEvent