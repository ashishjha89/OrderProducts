version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  broker: # Kafka Broker
    image: confluentinc/cp-kafka:7.6.1
    container_name: broker
    ports:
      - "9092:9092" # Port for applications running on the host
      - "29092:29092" # Internal port for Docker Compose services
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  connect: # Kafka Connect for Debezium Outbox Pattern
    image: confluentinc/cp-kafka-connect:7.6.1
    container_name: connect
    ports:
      - "8083:8083" # Kafka Connect REST API
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker:29092 # Connect to the internal Kafka listener
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components

      CONNECT_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    depends_on:
      - broker
    volumes:
      - connect_plugins:/usr/share/java/debezium-plugins

  mysql: # Your MySQL database, configured for Debezium CDC
    image: mysql:8.0 # Keeping 8.0 for stability, change to 8.3.0 if specifically needed
    container_name: mysql
    ports:
      - "3306:3306" # Expose MySQL port to host
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword # Password for the 'root' user inside the container
      MYSQL_DATABASE: order_product_db # Database to be automatically created
      MYSQL_USER: order_product_user # User to be automatically created
      MYSQL_PASSWORD: 283656ff3b8e513f # Password for the 'order_product_user'
      MYSQL_LOWER_CASE_TABLE_NAMES: 1
    command: ["mysqld", "--binlog-format=ROW", "--log-bin=mysql-bin", "--server-id=1"] # Crucial for Debezium
    volumes:
      - mysql_data:/var/lib/mysql

  mongodb: # Your MongoDB database
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017" # Expose MongoDB port to host
    volumes:
      - mongodb_data:/data/db

  zipkin: # Distributed Tracing Server
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411" # Expose Zipkin UI and API port to host

volumes: # Define named volumes for persistent data
  zookeeper_data:
  zookeeper_log:
  kafka_data:
  connect_plugins:
  mysql_data:
  mongodb_data: