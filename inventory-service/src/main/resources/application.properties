spring.application.name=inventory-service

######  Database Configuration #######
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/order_product_db
spring.datasource.username=order_product_user
# TODO: Fix this using environment variables or secrets manager
spring.datasource.password=283656ff3b8e513f
spring.jpa.hibernate.ddl-auto=none

# Assigns a random free port on startup
server.port = 0

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Spring Doc (Swagger UI) Configuration
springdoc.api-docs.path=/api/inventory/v3/api-docs
springdoc.swagger-ui.path=/api/inventory/swagger-ui.html

######  Actuator and Tracing Configuration (for monitoring and observability) #######
# Exposes all Actuator endpoints (health, info, metrics, etc.).
management.endpoints.web.exposure.include=*
# Shows full health details, very useful for debugging.
management.endpoint.health.show-details=always

# Zipkin Configuration
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
# Samples all traces. For production, consider a lower value (e.g., 0.1) to reduce overhead.
management.tracing.sampling.probability=1.0

# Micrometer Metrics Configuration
management.observations.key-values.application=${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests=true 

######  Logging Configuration #######
logging.level.root=INFO
logging.level.com.orderproduct=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.level.org.springframework.cloud=INFO
logging.level.org.springframework.security=INFO

# Enhanced logging pattern with timestamp and thread info
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] [%thread] %logger{36} - %m%n

# Kafka Properties
# Kafka is exposed on localhost:9092 by docker-compose
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=inventoryId
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer